<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>私人 on My Hugo Site</title>
    <link>http://localhost:1313/private/</link>
    <description>Recent content in 私人 on My Hugo Site</description>
    <generator>Hugo</generator>
    <language>en-us</language>
    <lastBuildDate>Wed, 06 Mar 2024 12:00:00 +0000</lastBuildDate>
    <atom:link href="http://localhost:1313/private/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>🔒 私人页面</title>
      <link>http://localhost:1313/private/test-3/</link>
      <pubDate>Wed, 06 Mar 2024 12:00:00 +0000</pubDate>
      <guid>http://localhost:1313/private/test-3/</guid>
      <description>&lt;h2 id=&#34;-面试c-相关问题&#34;&gt;💡 面试C# 相关问题&lt;/h2&gt;&#xA;&lt;h3 id=&#34;java-和-c-的异步编程方式有何不同何时适合使用异步编程&#34;&gt;Java 和 C# 的异步编程方式有何不同？何时适合使用异步编程？&lt;/h3&gt;&#xA;&lt;p&gt;Java:&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;使用 &lt;code&gt;Future&lt;/code&gt;、&lt;code&gt;CompletableFuture&lt;/code&gt;（JDK 8+）、&lt;code&gt;Reactive Streams&lt;/code&gt;（RxJava, Project Reactor）。&#xA;C#:&lt;/li&gt;&#xA;&lt;li&gt;依赖 &lt;code&gt;async/await&lt;/code&gt; 关键字和 &lt;code&gt;Task&lt;/code&gt; 并行库（TPL）。&lt;/li&gt;&#xA;&lt;li&gt;适用于 &lt;strong&gt;IO 密集型任务&lt;/strong&gt;、&lt;strong&gt;UI 应用防止卡死&lt;/strong&gt;、&lt;strong&gt;高并发服务器应用&lt;/strong&gt;（如 ASP.NET Core）。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h3 id=&#34;c-中-class-和-struct-的区别&#34;&gt;C# 中 &lt;code&gt;class&lt;/code&gt; 和 &lt;code&gt;struct&lt;/code&gt; 的区别？&lt;/h3&gt;&#xA;&lt;table&gt;&#xA;  &lt;thead&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;th&gt;对比项&lt;/th&gt;&#xA;          &lt;th&gt;&lt;code&gt;class&lt;/code&gt;（类）&lt;/th&gt;&#xA;          &lt;th&gt;&lt;code&gt;struct&lt;/code&gt;（结构体）&lt;/th&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/thead&gt;&#xA;  &lt;tbody&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;strong&gt;存储方式&lt;/strong&gt;&lt;/td&gt;&#xA;          &lt;td&gt;堆（Heap）&lt;/td&gt;&#xA;          &lt;td&gt;栈（Stack）/封装类&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;strong&gt;默认行为&lt;/strong&gt;&lt;/td&gt;&#xA;          &lt;td&gt;引用拷贝&lt;/td&gt;&#xA;          &lt;td&gt;值拷贝&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;strong&gt;构造函数&lt;/strong&gt;&lt;/td&gt;&#xA;          &lt;td&gt;可定义无参构造&lt;/td&gt;&#xA;          &lt;td&gt;无默认构造&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;strong&gt;继承&lt;/strong&gt;&lt;/td&gt;&#xA;          &lt;td&gt;支持继承和接口&lt;/td&gt;&#xA;          &lt;td&gt;仅支持接口&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/tbody&gt;&#xA;&lt;/table&gt;&#xA;&lt;hr&gt;&#xA;&lt;h2 id=&#34;-面试sql-server-相关问题&#34;&gt;🔍 面试SQL Server 相关问题&lt;/h2&gt;&#xA;&lt;h3 id=&#34;影响-sql-server-性能的主要因素如何优化查询性能&#34;&gt;&lt;strong&gt;影响 SQL Server 性能的主要因素？如何优化查询性能？&lt;/strong&gt;&lt;/h3&gt;&#xA;&lt;p&gt;影响因素：&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;strong&gt;索引使用不当&lt;/strong&gt;（缺失索引、冗余索引、不使用聚集索引）。&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;查询语句不优化&lt;/strong&gt;（&lt;code&gt;SELECT *&lt;/code&gt;、全表扫描）。&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;锁与阻塞&lt;/strong&gt;（长事务占用资源）。&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;内存 &amp;amp; CPU 资源不足&lt;/strong&gt;。&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;统计信息未更新&lt;/strong&gt;（SQL 计划低效）。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;优化方案：&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;strong&gt;合理使用索引&lt;/strong&gt;（主键索引、覆盖索引、分区索引）。&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;避免全表扫描&lt;/strong&gt;（&lt;code&gt;WHERE&lt;/code&gt; 过滤、优化 &lt;code&gt;JOIN&lt;/code&gt;）。&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;减少事务锁定&lt;/strong&gt;（降低事务粒度，&lt;code&gt;NOLOCK&lt;/code&gt; 查询）。&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;定期更新统计信息&lt;/strong&gt;（&lt;code&gt;UPDATE STATISTICS&lt;/code&gt;）。&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;数据库分片 &amp;amp; Redis 缓存&lt;/strong&gt;。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h3 id=&#34;sql-server-发生性能问题时的排查流程&#34;&gt;&lt;strong&gt;SQL Server 发生性能问题时的排查流程&lt;/strong&gt;&lt;/h3&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;&lt;strong&gt;SQL Server Profiler / Extended Events&lt;/strong&gt; 进行实时监控。&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;&lt;code&gt;sys.dm_exec_requests&lt;/code&gt;&lt;/strong&gt; 查询当前执行请求。&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;&lt;code&gt;DBCC SQLPERF(logspace)&lt;/code&gt;&lt;/strong&gt; 查看日志增长情况。&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;执行计划（Execution Plan）&lt;/strong&gt; 分析查询。&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;hr&gt;&#xA;&lt;h2 id=&#34;-实际作业修改共通处理的注意事项&#34;&gt;🔎 实际作业：修改共通处理的注意事项&lt;/h2&gt;&#xA;&lt;p&gt;✅ &lt;strong&gt;修改共通逻辑时的检查点&lt;/strong&gt;&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
