<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>アイネス入場者面接 :: WuSphere</title><link>/private/interview/ines-onboardinginterview/index.html</link><description>💡 面试C# 相关问题 Java 和 C# 的异步编程方式有何不同？何时适合使用异步编程？ Java:
使用 Future、CompletableFuture（JDK 8+）、Reactive Streams（RxJava, Project Reactor）。 C#: 依赖 async/await 关键字和 Task 并行库（TPL）。 适用于 IO 密集型任务、UI 应用防止卡死、高并发服务器应用（如 ASP.NET Core）。 C# 中 class 和 struct 的区别？ 对比项 class（类） struct（结构体） 存储方式 堆（Heap） 栈（Stack）/封装类 默认行为 引用拷贝 值拷贝 构造函数 可定义无参构造 无默认构造 继承 支持继承和接口 仅支持接口 🔍 面试SQL Server 相关问题 影响 SQL Server 性能的主要因素？如何优化查询性能？ 影响因素：
索引使用不当（缺失索引、冗余索引、不使用聚集索引）。 查询语句不优化（SELECT *、全表扫描）。 锁与阻塞（长事务占用资源）。 内存 &amp; CPU 资源不足。 统计信息未更新（SQL 计划低效）。 优化方案：
合理使用索引（主键索引、覆盖索引、分区索引）。 避免全表扫描（WHERE 过滤、优化 JOIN）。 减少事务锁定（降低事务粒度，NOLOCK 查询）。 定期更新统计信息（UPDATE STATISTICS）。 数据库分片 &amp; Redis 缓存。 SQL Server 发生性能问题时的排查流程 SQL Server Profiler / Extended Events 进行实时监控。 sys.dm_exec_requests 查询当前执行请求。 DBCC SQLPERF(logspace) 查看日志增长情况。 执行计划（Execution Plan） 分析查询。 🔎 实际作业：修改共通处理的注意事项 ✅ 修改共通逻辑时的检查点</description><generator>Hugo</generator><language>en-us</language><lastBuildDate/><atom:link href="/private/interview/ines-onboardinginterview/index.xml" rel="self" type="application/rss+xml"/></channel></rss>